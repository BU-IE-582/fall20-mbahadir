# uncomment if you would like to see qqplots
# qqnorm(sample_means,main=paste('Sample size',i))
# qqline(sample_means)
}
install.datatable
install.packages('data.table')
require(data.table)
library(data.table)
setwd('/Users/baha/Downloads/')
matches=readRDS('df9b1196-e3cf-4cc7-9159-f236fe738215_matches.rds')
str(matches)
install.data.table
install.packages('data.table')
require(data.table)
library(data.table)
setwd('/Users/baha/Downloads/')
matches=readRDS('df9b1196-e3cf-4cc7-9159-f236fe738215_matches.rds')
str(matches)
install.packages("data.table")
str(matches)
matches$leagueId=NULL
matches$type=NULL
matches[5]
matches[score=='5:5']
matches[score=='5:5']
matches[score=='5:5']
str(matches)
matches[score==' 5:5 ']
matches[score=' 5:5 ']
matches[score== 5:5 ]
matches[score== "5:5" ]
matches[5]
matches[score== "5:5" ]
matches[score== "5:5" ]
matches[score== '5:5' ]
matches[home=='manchester united']
matches[score== '5:5' ]
filter(matches,home=='manchester united')
matches[home=='manchester united']
matches[.score== '5:5' ]
sort(unique(matches$home))
unique(matches$home)
matches$home
unique(matches$home)
matches[home=='manchester-united' | 'manchester-utd']$home:='manchester united'
matches[home=='manchester-united' | 'manchester-utd']$home='manchester united'
matches[home=='manchester-utd' | home=='manchester-united']$home='manchester united'
matches(score== '5:5')
matches[score== '5:5']
matches[home=='manchester-utd' | home=='manchester-united']$home='manchester united'
matches[home=='manchester-utd' | home=='manchester-united']$home='manchester united'
install.data.table
install.packages('data.table')
require(data.table)
library(data.table)
setwd('/Users/baha/Downloads/')
matches=readRDS('df9b1196-e3cf-4cc7-9159-f236fe738215_matches.rds')
str(matches)
matches$leagueId=NULL
matches$type=NULL
#matches[5]
matches[score== '5:5']
install.data.table
install.packages('data.table')
require(data.table)
library(data.table)
setwd('/Users/baha/Downloads/')
matches=readRDS('df9b1196-e3cf-4cc7-9159-f236fe738215_matches.rds')
str(matches)
matches$leagueId=NULL
matches$type=NULL
#matches[5]
matches[score== '5:5']
install.packages("data.table")
matches[home=='manchester united']
matches[home=='manchester united']
install.data.table
install.packages('data.table')
require(data.table)
library(data.table)
setwd('/Users/baha/Downloads/')
matches=readRDS('df9b1196-e3cf-4cc7-9159-f236fe738215_matches.rds')
str(matches)
matches$leagueId=NULL
matches$type=NULL
#matches[5]
#matches[score== '5:5']
matches[home=='manchester united']
unique(matches$home)
matches[home=='manchester-utd' | home=='manchester-united']$home='manchester united'
unique(matches$home)
#matches[score== '5:5']
matches[home=='manchester united']
matches[,c('HomeGoal','AwayGoal'):=tstrsplit(score,':' )]
install.data.table
install.packages('data.table')
require(data.table)
library(data.table)
setwd('/Users/baha/Downloads/')
matches=readRDS('df9b1196-e3cf-4cc7-9159-f236fe738215_matches.rds')
str(matches)
matches$leagueId=NULL
matches$type=NULL
#matches[5]
#matches[score== '5:5']
matches[home=='manchester united']
unique(matches$home)
matches[home=='manchester-utd' | home=='manchester-united']$home='manchester united'
install.packages("data.table")
#matches[score== '5:5']
matches[home=='manchester united']
install.data.table
install.packages('data.table')
require(data.table)
library(data.table)
setwd('/Users/baha/Downloads/')
matches=readRDS('df9b1196-e3cf-4cc7-9159-f236fe738215_matches.rds')
str(matches)
matches$leagueId=NULL
matches$type=NULL
#matches[5]
#matches[score== '5:5']
matches[home=='manchester united']
unique(matches$home)
matches[home=='manchester-utd' | home=='manchester-united']$home='manchester united'
matches[,c('HomeGoal','AwayGoal'):=tstrsplit(score,':' )]
matches[,HomeGoal:=as.numeric(HomeGoal)]
matches[,HomeGoal:=as.numeric(HomeGoal)]
matches[,HomeGoal:=as.numeric(HomeGoal)]
matches[,AwayGoal:=as.numeric(AwayGoal)]
matches[,MatchResult:=ifelse(HomeGoal>AwayGoal,'home',
ifelse(HomeGoal==AwayGoal,'draw','away'))]
matches[,MatchResult:=ifelse(HomeGoal>AwayGoal,'home',
ifelse(HomeGoal==AwayGoal,'draw','away'))]
matches[,MatchResult:=ifelse(HomeGoal>AwayGoal,'home',ifelse(HomeGoal==AwayGoal,'draw','away'))]
#install.packages('lubridate')
require(lubridate)
matches[,timestamp:=as_datetime(date,tz='Turkey')]
matches[,date_of_match:=date(timestamp)]
install.packages('lubridate')
require(lubridate)
matches[,timestamp:=as_datetime(date,tz='Turkey')]
matches[,date_of_match:=date(timestamp)]
install.packages("lubridate")
matches[date_of_match>'2019-02-25']
matches[,date_of_match:=date(timestamp)]
install.packages('lubridate')
require(lubridate)
matches[,timestamp:=as_datetime(date,tz='Turkey')]
matches[,date_of_match:=date(timestamp)]
matches[date_of_match>'2019-02-25']
install.data.table
install.packages('data.table')
require(data.table)
library(data.table)
setwd('/Users/baha/Downloads/')
matches=readRDS('df9b1196-e3cf-4cc7-9159-f236fe738215_matches.rds')
str(matches)
matches$leagueId=NULL
matches$type=NULL
#matches[5]
#matches[score== '5:5']
matches[home=='manchester united']
unique(matches$home)
matches[home=='manchester-utd' | home=='manchester-united']$home='manchester united'
matches[,c('HomeGoal','AwayGoal'):=tstrsplit(score,':' )]
matches[,HomeGoal:=as.numeric(HomeGoal)]
matches[,AwayGoal:=as.numeric(AwayGoal)]
matches[,MatchResult:=ifelse(HomeGoal>AwayGoal,'home',ifelse(HomeGoal==AwayGoal,'draw','away'))]
install.packages('lubridate')
require(lubridate)
matches[,timestamp:=as_datetime(date,tz='Turkey')]
matches[,date_of_match:=date(timestamp)]
matches[date_of_match>'2019-02-25']
install.packages("lubridate")
matches[,hour_of_match:=hour(timestamp)]
matches[,hour_of_match:=hour(timestamp)]
summary_by_hour=matches[,list(count=.N),
by=list(hour_of_match,MatchResult)]
View(summary_by_hour)
install.packages('tabledata')
require(data.table)#Warning
library(data.table)#error
setwd('Users/baha/Downloads/')
matches=readRDS('df9b1196-e3cf-4cc7-9159-f236fe738215_matches.rds')
str(matches)
View(matches)
View(matches)
matches[5]
matches[score,'5:5']
matches[score=='5:5']
matches[score=='5']
matches[score==5]
matches[score=='5:5']
matches[home=='manchester united']
matches[home=='manchester united' | '5:5']
matches[home=='manchester united' | score=='5:5']
matches[away=='manchester united' & score=='5:5']
sort(unique(matches$home))
sort(matches$home)
matches[home=='manchester-utd',home:='manchester united']
sort(unique(matches$home))
matches[home=='manchester-utd'|'manchester-united']$home='manchester united'
matches[home=='manchester-utd','manchester-united']$home='manchester united'
matches[home=='manchester-utd' |'manchester-united']$home='manchester united'
matches[home=='manchester-utd' |'manchester-united']$home='manchester united'
matches[home=='manchester-utd' | 'manchester-united']$home='manchester united'
matches[home=='manchester-utd',home:='manchester united']
matches[home=='manchester-utd',home:='manchester united']
matches[home=='manchester-utd' | 'manchester-united']$home='manchester united'
matches[home=='manchester-utd',home:='manchester united']
matches[home=='manchester-utd' | 'manchester-united']$home='manchester united'
matches[home=='manchester-utd']$home='manchester united'
matches[home=='manchester-utd']$home='manchester united'
matches[home=='manchester-utd' | home=='manchester-united']$home='manchester united'
matches$leagueId=NULL
matches[type]=NULL
matches[type]=NULL
matches$type=NULL
matches[,c(HomeGoal,AwayGoal),tstrsplit(score,':')]
matches[,c('HomeGoal','AwayGoal'),tstrsplit(score,':')]
matches[,HomeGoal:=as.numaric(HomeGoal)]
matches[,HomeGoal:=as.numaric(HomeGoal)]
matches[,HomeGoal:=as.numaric(HomeGoal)]
matches[,HomeGoal:=as.numaric(HomeGoal)]
matches[,AwayGoal:=as.numeric(AwayGoal)]
matches[,HomeGoal:=as.numeriHomeGoal]
matches[,HomeGoal:=as.numeric(HomeGoal) ]
matches[,c('HomeGoal','AwayGoal'),tstrsplit(score,':')]
matches[,HomeGoal:=as.numeric(HomeGoal)]
matches[,AwayGoal:=as.numeric(AwayGoal)]
matches[,c('HomeGoal','AwayGoal'),tstrsplit(score,':')]
matches[,c('HomeGoal','AwayGoal'),tstrsplit(score,':')]
install.packages('tabledata')
require(data.table)#Warning
library(data.table)#error
setwd('Users/baha/Downloads/')
matches=readRDS('df9b1196-e3cf-4cc7-9159-f236fe738215_matches.rds')
str(matches)
View(matches)
matches$leagueId=NULL
matches$type=NULL
matches[5]
matches[score=='5:5']
matches[home=='manchester united']
matches[away=='manchester united' | score=='5:5']
sort(unique(matches$home))
matches[home=='manchester-utd',home:='manchester united']
matches[home=='manchester-utd' | home=='manchester-united']$home='manchester united'
matches[,c('HomeGoal','AwayGoal'),tstrsplit(score,':')]
matches[,HomeGoal:=as.numeric(HomeGoal)]
matches[,AwayGoal:=as.numeric(AwayGoal)]
matches[,ifelse()]
matches[,HomeGoal:=as.numeric(HomeGoal)]
matches[,c('HomeGoal','AwayGoal'),tstrsplit(score,':')]
matches[home=='manchester-utd' | home=='manchester-united']$home='manchester united'
matches[,c('HomeGoal','AwayGoal'),tstrsplit(score,':')]
matches[,c('HomeGoal','AwayGoal'),tstrsplit(score,':')]
matches[,c('HomeGoal','AwayGoal'):=tstrsplit(score,':')]
matches[,HomeGoal:=as.numeric(HomeGoal)]
matches[,AwayGoal:=as.numeric(AwayGoal)]
matches[,HomeGoal:=as.numeric(HomeGoal)]
matches[,timestamp:=as_datetime(date,tz='Turkey')]
install.packages('lubridate')
require(lubridate)
library(lubridate)
matches[,timestamp:=as_datetime(date,tz='Turkey')]
install.packages("lubridate")
matches[,timestamp:=as_datetime(date,tz='Turkey')]
install.packages('tabledata')
require(data.table)#Warning
library(data.table)#error
setwd('Users/baha/Downloads/')
matches=readRDS('df9b1196-e3cf-4cc7-9159-f236fe738215_matches.rds')
str(matches)
View(matches)
matches$leagueId=NULL
matches$type=NULL
matches[5]
matches[score=='5:5']
matches[home=='manchester united']
matches[away=='manchester united' | score=='5:5']
sort(unique(matches$home))
matches[home=='manchester-utd',home:='manchester united']
matches[home=='manchester-utd' | home=='manchester-united']$home='manchester united'
matches[,c('HomeGoal','AwayGoal'):=tstrsplit(score,':')]
matches[,HomeGoal:=as.numeric(HomeGoal)]
matches[,AwayGoal:=as.numeric(AwayGoal)]
mathes[,]
install.packages('lubridate')
require(lubridate)
library(lubridate)
matches[,timestamp:=as_datetime(date,tz='Turkey')]
matches[,timestamp:=as_datetime(date,tz='Turkey')]
matches[,dat_of_match:=date(timestamp)]
matches[,date_of_match:=date(timestamp)]
matches[timestamp]
matches[,timestamp]
View(matches)
View(matches)
matches$timestamp
matches[,hour_of_match=hour(timestamp)]
matches[,hour_of_match:=hour(timestamp)]
View(matches)
View(matches)
summary_by_hour=matches[,list(count=.N),by=list(hour_of_match,Match.result)]
matches[,MatchResult=ifelse(HomeGoal>AwayGoal,'Win',ifelse(HomeGoal=AwayGoal,'Draw','Lose'))]
matches[,MatchResult:=ifelse(HomeGoal>AwayGoal,'Win',ifelse(HomeGoal=AwayGoal,'Draw','Lose'))]
matches[,MatchResult:=ifelse(HomeGoal>AwayGoal,'home',ifelse(HomeGoal==AwayGoal,'draw','away'))]
summary_by_hour=matches[,list(count=.N),by=list(hour_of_match,MatchResult)]
library(xlsx)
library(lubridate)
library(ggplot2)
EVDS=read.xlsx("EVDS.xlsx",sheetIndex=1, header=TRUE)
names(EVDS)
EVDS <- EVDS[-c(255, 256), ]
EVDS$Tarih=dmy(EVDS$Tarih)
EVDS$Week=week(EVDS$Tarih)
EVDS$month_year <-format(EVDS$Tarih,'%Y-%m')
summary(EVDS)
str(EVDS)
unemployement_df=read.csv("unemployement.csv", stringsAsFactors = FALSE)
unemployement_df <- unemployement_df[-c(157, 158), ]
unemployement_df$Tarih=as.Date(as.yearmon(unemployement_df$Tarih))
summary(unemployement_df)
df_all=fread("E0.csv")
df=df_all[,1:56]
library(ggplot2)
library(data.table)
setwd("~/Github/IE 582/fall20-mbahadir/Homework1")
library(data.table)
df_all=fread("E0.csv")
library(data.table)
df_1=fread("E0.csv")
df_2=fread("E0-2.csv")
df_3=fread("E0-3.csv")
df_all <- rbind(df_1, df_2, df_3)
df_all <- rbind(df_1, df_2, df_3)
View(df_2)
names(df_1)
names(df_2)
names(df_3)
df_1=fread("E0.csv")
df_2=fread("E0-2.csv")
df_3=fread("E0-3.csv")
names(df_1)
names(df_2)
names(df_3)
View(df_1)
View(df_2)
View(df_3)
df_1=fread("E0.csv")
df_2=fread("E0-2.csv")
df_3=fread("E0-3.csv")
joints <- intersect(colnames(df_3), colnames(df_1[,1:56]))
df<-rbind(subset(season2018, select = joints), subset(season2019, select = joints),subset(season2020, select=joints))
df<-rbind(subset(df_1, select = joints), subset(df_2, select = joints),subset(df_3, select=joints))
View(df)
library(ggplot2)
hist(df$FTHG, ylab="Number of Games", xlab="Home Goals",main="Histogram of Home Goals")
hist(df$FTAG, ylab="Number of Games", xlab="Away Goals",main="Histogram of Away Goals")
hist(df$FTHG-df$FTAG, ylab="Number of Games", xlab="HHome goals – Away Goals",
main="Histogram of Difference")
hist1<-hist(df$FTHG, ylab="Number of Games", xlab="Home Goals",main="Histogram of Home Goals")
x <- df$FTHG
xfit<-seq(min(x),max(x),length=78)
yfit_pois<-dpois(as.integer(xfit),lambda=1/mean(x),log = FALSE)
yfit_pois<- yfit_pois*diff(hist1$mids[1:2])*length(x)
lines(xfit, yfit_pois, col="green", lwd=2)
yfit_normal<-dnorm(xfit,mean=mean(x),sd=sd(x))
yfit_normal<- yfit_normal*diff(hist1$mids[1:2])*length(x)
lines(xfit, yfit_normal, col="blue", lwd=2)
yfit_exponential<-dexp(xfit,rate=1/mean(x),log = FALSE)
yfit_exponential <- yfit_exponential*diff(hist1$mids[1:2])*length(x)
lines(xfit, yfit_exponential, col="red", lwd=2)
hist2<-hist(df$FTAG, ylab="Number of Games", xlab="Away Goals",main="Histogram of Away Goals")
x1 <- df$FTAG
xfit1<-seq(min(x1),max(x1),length=78)
yfit1_pois<-dpois(as.integer(xfit1),lambda=1/mean(x1),log = FALSE)
yfit1_pois<- yfit1_pois*diff(hist2$mids[1:2])*length(x1)
lines(xfit1, yfit1_pois, col="green", lwd=2)
yfit1_normal<-dnorm(xfit1,mean=mean(x1),sd=sd(x1))
yfit1_normal <- yfit1_normal*diff(hist2$mids[1:2])*length(x1)
lines(xfit1, yfit1_normal, col="blue", lwd=2)
yfit1_exponential<-dexp(xfit1,rate=1/mean(x1),log = FALSE)
yfit1_exponential <- yfit1_exponential*diff(hist2$mids[1:2])*length(x1)
lines(xfit1, yfit1_exponential, col="red", lwd=2)
df_Bet365=df[,c(8,23,24,25,26,27)]
df_BetAndWin=df[,c(8,23,24,28,29,30)]
df_Bet365=df[,c(7,22,23,24,25,26)]
df_BetAndWin=df[,c(7,22,23,27,28,29)]
df_Pinnacle=df[,c(7,22,23,33,34,35)]
df_IW=df[,c(7,22,23,30,31,32)]
df_Bet365$home_prob=1/df_Bet365$B365H
df_Bet365$draw_prob=1/df_Bet365$B365D
df_Bet365$away_prob=1/df_Bet365$B365A
df_BetAndWin$home_prob=1/df_BetAndWin$BWH
df_BetAndWin$draw_prob=1/df_BetAndWin$BWD
df_BetAndWin$away_prob=1/df_BetAndWin$BWA
df_Pinnacle$home_prob=1/df_Pinnacle$PSH
df_Pinnacle$draw_prob=1/df_Pinnacle$PSD
df_Pinnacle$away_prob=1/df_Pinnacle$PSA
df_IW$home_prob=1/df_IW$IWH
df_IW$draw_prob=1/df_IW$IWD
df_IW$away_prob=1/df_IW$IWA
df_Bet365$total_prob=df_Bet365$home_prob+df_Bet365$draw_prob+df_Bet365$away_prob
df_Bet365$normalized_home_prob=(1/df_Bet365$B365H)/df_Bet365$total_prob
df_Bet365$normalized_draw_prob=(1/df_Bet365$B365D)/df_Bet365$total_prob
df_Bet365$normalized_away_prob=(1/df_Bet365$B365A)/df_Bet365$total_prob
df_BetAndWin$total_prob=df_BetAndWin$home_prob+df_BetAndWin$draw_prob+df_BetAndWin$away_prob
df_BetAndWin$normalized_home_prob=(1/df_BetAndWin$BWH)/df_BetAndWin$total_prob
df_BetAndWin$normalized_draw_prob=(1/df_BetAndWin$BWD)/df_BetAndWin$total_prob
df_BetAndWin$normalized_away_prob=(1/df_BetAndWin$BWA)/df_BetAndWin$total_prob
df_Pinnacle$total_prob=df_Pinnacle$home_prob+df_Pinnacle$draw_prob+df_Pinnacle$away_prob
df_Pinnacle$normalized_home_prob=(1/df_Pinnacle$PSH)/df_Pinnacle$total_prob
df_Pinnacle$normalized_draw_prob=(1/df_Pinnacle$PSD)/df_Pinnacle$total_prob
df_Pinnacle$normalized_away_prob=(1/df_Pinnacle$PSA)/df_Pinnacle$total_prob
df_IW$total_prob=df_IW$home_prob+df_IW$draw_prob+df_IW$away_prob
df_IW$normalized_home_prob=(1/df_IW$IWH)/df_IW$total_prob
df_IW$normalized_draw_prob=(1/df_IW$IWD)/df_IW$total_prob
df_IW$normalized_away_prob=(1/df_IW$IWA)/df_IW$total_prob
library(comprehenr)
a<-seq(-1,0.8,by=0.2)
df_Bet365$diff=df_Bet365$home_prob-df_Bet365$away_prob
df_Bet365$categ<-to_vec(for(posi in 1:78) for(i in a)
if(i>(df_Bet365$home_prob[posi]-df_Bet365$away_prob[posi]) &&
i<=(df_Bet365$home_prob[posi]-df_Bet365$away_prob[posi]+0.2)) as.integer((i+1)/0.2)-1)
df_Bet365[categ==0, bins:="(-1, -0.8]"]
df_Bet365[categ==1, bins:="(-0.8, -0.6]"]
df_Bet365[categ==2, bins:="(-0.6, -0.4]"]
df_Bet365[categ==3, bins:="(-0.4, -0.2]"]
df_Bet365[categ==4, bins:="(-0.2, 0]"]
df_Bet365[categ==5, bins:="(0, 0.2]"]
df_Bet365[categ==6, bins:="(0.2, 0.4]"]
df_Bet365[categ==7, bins:="(0.4, 0.6]"]
df_Bet365$categ<-to_vec(for(posi in 1:78) for(i in a)
if(i>(df_Bet365$home_prob[posi]-df_Bet365$away_prob[posi]) &&
i<=(df_Bet365$home_prob[posi]-df_Bet365$away_prob[posi]+0.2)) as.integer((i+1)/0.2)-1)
df_Bet365$categ<-to_vec(for(posi in 1:838) for(i in a)
if(i>(df_Bet365$home_prob[posi]-df_Bet365$away_prob[posi]) &&
i<=(df_Bet365$home_prob[posi]-df_Bet365$away_prob[posi]+0.2)) as.integer((i+1)/0.2)-1)
df_Bet365$diff=df_Bet365$home_prob-df_Bet365$away_prob
df_Bet365$categ<-to_vec(for(posi in 1:838) for(i in a)
if(i>(df_Bet365$home_prob[posi]-df_Bet365$away_prob[posi]) &&
i<=(df_Bet365$home_prob[posi]-df_Bet365$away_prob[posi]+0.2)) as.integer((i+1)/0.2)-1)
View(df_Bet365)
df_Bet365$categ<-to_vec(for(posi in 1:838) for(i in a)
if(i>=(df_Bet365$home_prob[posi]-df_Bet365$away_prob[posi]) &&
i<=(df_Bet365$home_prob[posi]-df_Bet365$away_prob[posi]+0.2)) as.integer((i+1)/0.2)-1)
a<-seq(-1,1,by=0.2)
df_Bet365$diff=df_Bet365$home_prob-df_Bet365$away_prob
df_Bet365$categ<-to_vec(for(posi in 1:838) for(i in a)
if(i>(df_Bet365$home_prob[posi]-df_Bet365$away_prob[posi]) &&
i<=(df_Bet365$home_prob[posi]-df_Bet365$away_prob[posi]+0.2)) as.integer((i+1)/0.2)-1)
df_Bet365$categ<-to_vec(for(posi in 1:838) for(i in a)
if(i>=(df_Bet365$home_prob[posi]-df_Bet365$away_prob[posi]) &&
i<=(df_Bet365$home_prob[posi]-df_Bet365$away_prob[posi]+0.2)) as.integer((i+1)/0.2)-1)
df_Bet365[categ==0, bins:="(-1, -0.8]"]
df_Bet365[categ==1, bins:="(-0.8, -0.6]"]
df_Bet365[categ==2, bins:="(-0.6, -0.4]"]
df_Bet365[categ==3, bins:="(-0.4, -0.2]"]
df_Bet365[categ==4, bins:="(-0.2, 0]"]
df_Bet365[categ==5, bins:="(0, 0.2]"]
df_Bet365[categ==6, bins:="(0.2, 0.4]"]
df_Bet365[categ==7, bins:="(0.4, 0.6]"]
df_Bet365[categ==8, bins:="(0.6, 0.8]"]
df_Bet365[categ==9, bins:="(0.8, 1]"]
df_Bet365[FTR=="D",draw:=1]
df_Bet365[FTR=="H",draw:=0]
df_Bet365[FTR=="A",draw:=0]
#determined_bins <- factor(c( "(-1, -0.8]", "(-0.8, -0.6]", "(-0.6, -0.4]","(-0.4, -0.2]",
#              "(-0.2, 0]","(0, 0.2]","(0.2, 0.4]","(0.4, 0.6]","(0.6, 0.8]", "(0.8, 1]"),
#           levels = c( "(-1, -0.8]", "(-0.8, -0.6]", "(-0.6, -0.4]","(-0.4, -0.2]",
#                     "(-0.2, 0]","(0, 0.2]","(0.2, 0.4]","(0.4, 0.6]","(0.6, 0.8]", "(0.8, 1]"),
#         ordered = T)
df_Bet365[,real_draw_prob:=mean(draw),by=categ]
#table(df_Bet365$bins,df_Bet365$draw)
ggplot(df_Bet365,aes(x=diff,y=draw_prob))+geom_point(color="red")+
labs(x="Difference between Probabilities",y="Probability of Draw")+ggtitle("Bet 365")+
geom_point(aes(x=diff, y=real_draw_prob),color="blue") + theme(axis.text.x = element_text(angle = 45,hjust = 1))+
scale_x_continuous(breaks = scales::pretty_breaks(n = 10),limits=c(-1,1))
ggplot(df_Bet365,aes(x=bins,y=draw_prob))+ stat_summary(fun.y="mean", geom="bar")+
labs(x="Bins",y="Probability of Draw")+ggtitle("Bet 365")+
geom_bar(aes(x=bins, y=real_draw_prob),stat = "summary", fun.y = "mean",
fill="yellow",alpha=.3) + theme(axis.text.x = element_text(angle = 45,hjust = 1))
df_BetAndWin$diff=df_BetAndWin$home_prob-df_BetAndWin$away_prob
df_BetAndWin$categ<-to_vec(for(posi in 1:78) for(i in a)
if(i>=(df_BetAndWin$home_prob[posi]-df_BetAndWin$away_prob[posi]) &&
i<(df_BetAndWin$home_prob[posi]-df_BetAndWin$away_prob[posi]+0.2)) as.integer((i+1)/0.2)-1)
df_BetAndWin[categ==0, bins:="(-1, -0.8]"]
df_BetAndWin[categ==1, bins:="(-0.8, -0.6]"]
df_BetAndWin[categ==2, bins:="(-0.6, -0.4]"]
df_BetAndWin[categ==3, bins:="(-0.4, -0.2]"]
df_BetAndWin[categ==4, bins:="(-0.2, 0]"]
df_BetAndWin[categ==5, bins:="(0, 0.2]"]
df_BetAndWin[categ==6, bins:="(0.2, 0.4]"]
df_BetAndWin[categ==7, bins:="(0.4, 0.6]"]
df_BetAndWin[categ==8, bins:="(0.6, 0.8]"]
df_BetAndWin[categ==9, bins:="(0.8, 1]"]
df_BetAndWin[FTR=="D",draw:=1]
df_BetAndWin[FTR=="H",draw:=0]
df_BetAndWin[FTR=="A",draw:=0]
determined_bins <- factor(c( "(-1, -0.8]", "(-0.8, -0.6]", "(-0.6, -0.4]","(-0.4, -0.2]",
"(-0.2, 0]","(0, 0.2]","(0.2, 0.4]","(0.4, 0.6]","(0.6, 0.8]", "(0.8, 1]"),
levels = c( "(-1, -0.8]", "(-0.8, -0.6]", "(-0.6, -0.4]","(-0.4, -0.2]",
"(-0.2, 0]","(0, 0.2]","(0.2, 0.4]","(0.4, 0.6]","(0.6, 0.8]", "(0.8, 1]"),
ordered = T)
df_BetAndWin[,real_draw_prob:=mean(draw),by=categ]
ggplot(df_BetAndWin,aes(x=diff,y=draw_prob))+geom_point(color="red")+
labs(x="Difference between Probabilities",y="Probability of Draw")+ggtitle("Bet and Win")+ xlim(-1,1)+
geom_point(aes(x=diff, y=real_draw_prob),color="blue") + theme(axis.text.x = element_text(angle = 45,hjust = 1))+
scale_x_continuous(breaks = scales::pretty_breaks(n = 10),limits=c(-1,1))
